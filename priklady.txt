MODULE e1;

CONST
    matrixSize = 10;

VAR
    mat: MATRIX matrixSize, matrixSize OF REAL;

PROCEDURE printRealMatrix(m : MATRIX OF REAL);
BEGIN
    FOR i := 0 TO LEN_X(m) DO
        FOR j := 0 TO LEN_Y(m) DO
            PRINT(m[i, j]);
            PRINT(" ");
        END;
        PRINTLN();
    END;
END printRealMatrix;

BEGIN
    FOR i := 0 TO LEN_X(mat) DO
        FOR j := 0 TO LEN_Y(mat) DO
            mat[i, j] := INT_TO_REAL(i) + INT_TO_REAL(j);
        END;
    END;

    printRealMatrix(mat);
END e1.






MODULE e2;

CONST
    a = 10;

VAR
    b: INTEGER;
    res: STRING;

BEGIN
    PRINTLN("a = ", a);
    PRINT("Zadejte b: ");
    b := READ_INT();

    IF a > b THEN
        res := "a > b";
    ELSIF a < b THEN
        res := "a < b";
    ELSE
        res := "a = b";
    END;

    PRINTLN(res);
END e2.





MODULE e3;

CONST
    maxFactorial = 20;

VAR
    factorial: INTEGER;
    factorials: ARRAY maxFactorial OF INTEGER;

PROCEDURE recFact(f: INTEGER): INTEGER;
VAR res: INTEGER;
BEGIN
    IF f <= 1 THEN
        res := 1;
    ELSE
        res := f * recFact(f - 1);
    END;

    factorials[f] := res;

    RETURN res;
END recFact;

BEGIN
    PRINT("Zadejte číslo faktoriálu (max ", maxFactorial, "): ");
    factorial := READ_INT();
    IF factorial > maxFactorial THEN
        PRINTLN("Neplatné číslo ", factorial);
        EXIT()
    END;
    IF factorial < 0 THEN
        PRINTLN("Zadejte kladné číslo");
        EXIT()
    END;

    recFact(factorial);
    PRINTLN("Faktoriály: ");

    FOR i := 0 TO factorial+1 DO
        PRINTLN(i, ": ", factorials[i])
    END;
END e3.